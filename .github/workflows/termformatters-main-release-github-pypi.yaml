# Building and publishing release to GitHub and PyPI workflow
#
# v0.2.1
name: Release Publication

on:
  push:
    tags:
      - "!*rc*"
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  build_and_upload:
    name: Build and uploading a release

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.x
        id: setup_py310
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: 'x64'
          update-environment: true
      - name: Display Python version
        run: |
          python -c "import sys; print(sys.version)"
          echo '${{ steps.setup_py310.outputs.python-path }}'
      - name: Install package dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Install build tools packages
        run: |
          pip install --upgrade build setuptools wheel twine
      - name: Build package source tarball and binary wheel
        run: |
          python -m build
      - name: Release publication
        id: creating_release
        if: ${{ success() }} && startsWith(github.ref, 'refs/tags/')
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          prerelease: false
          draft: false
          name: ""
          generateReleaseNotes: false
          omitName: true
          omitNameDuringUpdate: false
          artifacts: "dist/*.tar.gz,dist/*.whl"
          replacesArtifacts: true
          allowUpdates: true
          updateOnlyUnreleased: false
      - name: Publish distribution to PyPI
        id: publish_to_pypi
        if: ${{ success() }} && github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip_existing: true
          verbose: true
          print_hash: true
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
      - name: Print post publication info
        run: |
          echo "GitHub Release ID "${{ steps.creating_prerelease.outputs.id }}
          echo "Release ready at "${{ steps.creating_prerelease.outputs.html_url }}
          echo "Upload to "${{ steps.creating_prerelease.outputs.upload_url }}
          echo ""
          if [ -d "dist" ]; then echo "Package assets" && ls dist; fi
          echo ""
          echo "âœ… Operation Completed!"
